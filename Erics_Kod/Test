import numpy as np
import itertools
n=6

empty = []
obst_index = [[], [], []]
ray_index = [[], [], []]

obst_type = ['wall','rect','circ']
obst_type2 = [[2,3],[2,3],[2,3]]
obst_type3 = [[],[],[]]
obst_type4 = [[4,5],[4,5],[4,5]]

rays_coords = [[1,1], [2,2],[3,3]]
wall_coord = [[10,10]]
obst_coords = [ [[0,0]], [[1,1],[2,2]], [[5,5],[6,6], [7,7]] ]
arr = [1,2,3]
boolean = [True, True, False, False, False, False]
boolean_rays = [ [False,True], [[True,True],[True,False]], [[True,True],[True,False]] ]
obst_boolean = [[False, False, False, False, False, False],
 [True, False, False, False, False, False],
 [True, False, False, False, False, False],
 [False, False, False, False, False, False]]
result = []
for element in range(len(obst_type2)):
    result.append(list(zip(*[obst_type2[element],obst_type4[element]])))
print(result)

print([ list(zip(*[obst_type2[element],obst_type4[element]])) for element in range(len(obst_type2)) ])
#print(np.array(rays_coords)*np.array(boolean_rays))
#print([arr[i] for i in range(len(arr))])
#print(list(itertools.chain.from_iterable(boolean_rays[1])))
#print(np.array(boolean)*np.array(obst_type2))
#print(True if h == '' else False)
#obst_type3[1].append([False for i in range(n)])
#obst_type3[1].append([False for i in range(n)])
#print(obst_type3[1])
#print(True in list(itertools.chain.from_iterable(obst_type3[1])))
# type = 1
# true_indices = [index for index, element in enumerate(boolean) if element]
# print(true_indices)
# obst_index[type].append([1 for i in range(len(true_indices))])
# ray_index[type].append(true_indices)
# print(obst_index)
# print(ray_index)
# print(obst_index[type][0])
# print()
#
# true_indices = [index for index, element in enumerate(boolean) if element]
# print(true_indices)
# arr_ = [[],[],[]]
# arr_[0].extend(true_indices)
# arr_[0].extend(true_indices)
# print([5 for i in range(5)])''
# Obst, ray
arr = [[2,2], [3,3]]
list = [2,3,np.inf]
print(np.min(list))

index = [[],[],[]]
index[1].append(1)
index[1].append(2)
true_indices = [index for index, element in enumerate(boolean) if element]
print(true_indices)
index[2].extend(true_indices)
print(index)
empty = []
print(len(empty))